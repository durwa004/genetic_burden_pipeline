#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Oct 13 14:35:43 2019

@author: durwa004
"""

#Merge in bcfstats by AF column
import pandas as pd
import os

#Had to remove this horse: ERR1527968 as no variants
path = "/Users/durwa004/Documents/PhD/Projects/1000_genomes/GB_project/bcftools_stats_output/AF_freq_files/"
tmp_df = pd.DataFrame()
AF = []
with open(path + "/LIPI0187A_Other_AF_freq.txt") as tmp_file:
    tmp_file.readline()
    for line in tmp_file:
        line = line.rstrip("\n").split("\t")
        AF.append(line[0])
    tmp_df['AF'] = AF
        
for filename in os.listdir(path):
    if filename.endswith("AF_freq.txt"):
        a = filename.split("_")
        b = a[0] + "_" + a[1]
        freq = []
        with open(path + "/" + filename, "r") as input_file:
            input_file.readline()
            for line in input_file:
                line = line.rstrip("\n").split("\t")
                freq.append(line[1])
            tmp_df[b] = freq
    
tmp_df.to_csv(path + "/../all_horses_AF_freq_info.txt", sep='\t', index=False)


#Then look at output file in R
            

count_1 = 0
count_5 = 0
count_10 = 0
count_25 = 0
count_50 = 0
count_75 = 0
count_100 = 0
count_1001 = 0

with open(path + "/../all_horses_AF_freq_info.txt", "r") as input_file, open(path + "../all_horses_AF_categorized.txt", "w") as output_file:
    header = input_file.readline()
    header = header.rstrip("\n").split("\t")
    print("\t".join(header),file = output_file)
    for line in input_file:
        line = line.rstrip("\n").split("\t")
        AF = float(line[0])
        if AF < 1:
            count_1 +=1
            print("<1%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=1 and AF < 5:
            count_5 +=1
            print("1-<5%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=5 and AF < 10:
            count_10 +=1
            print("5-<10%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=10 and AF < 25:
            count_25 +=1
            print("10-<25%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=25 and AF < 50:
            count_50 +=1
            print("25-<50%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=50 and AF < 75:
            count_75 +=1
            print("50-<75%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF >=75 and AF < 100:
            count_100 +=1
            print("75-<100%","\t", "\t".join(line[1:]), file = output_file, sep = "")
        elif AF == 100:
            count_1001 +=1
            print("100%","\t", "\t".join(line[1:]), file = output_file, sep = "")
print(count_1, count_5, count_10, count_25,  count_50, count_75, count_100, count_1001, sep = "\n")            
        